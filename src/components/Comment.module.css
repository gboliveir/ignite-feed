.comment {
  margin-top: 1.5rem;
  display: flex;
  gap: 1rem;
}

.commentBox {
  flex: 1; /* Faz com que o elemento estique e ocupe todo espaço disponível*/
}

.commentContent {
  background: var(--gray-700);
  border-radius: 8px;
  padding: 1rem;
}

.commentContent header {
  display: flex;
  align-items: flex-start;
  justify-content: space-between;
}

.authorAndTime strong {
  display: block;
  font-size: 0.857rem;
  line-height: 1.6;
}

.authorAndTime time {
  display: block;
  font-size: 0.75rem;
  line-height: 1.6;
  color: var(--gray-400);
}

.commentContent header button {
  background: transparent;
  border: 0;
  color: var(--gray-400);
  cursor: pointer;

  /*
    A altura de um botão não é definida pelo conteúdo dele. Para botões que apresentam apenas um 
    icone em seu interior é interessante definir o line-height=0 para garantir um centralização mais 
    interessante ao utilizar o TAB para focar esse elemento. Também é possivel conseguir o mesmo resul-
    tado definindo font-size=0.
  */
  line-height: 0;
  border-radius: 2px;
}

.commentContent header button:hover {
  color: var(--red-500);
}

.commentContent p {
  margin-top: 1rem;
  color: var(--gray-300);
}


.commentBox footer {
  margin-top: 1rem;
}

.commentBox footer button {
  background: transparent;
  border: 0;
  color: var(--gray-400);
  cursor: pointer;

  display: flex;
  align-items: center;

  border-radius: 2px;
}

.commentBox footer button:hover {
  color: var(--green-300);
}

.commentBox footer button svg {
  margin-right: 0.5rem;
}

.commentBox footer button span::before { /* O before cria um elemento dentro do span e anterior a qualquer outro conteúdo interno */
  content: "\2022"; /* O elemento representado por esse código é um ponto */
  padding: 0 0.25rem;
}